/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/main.ts
var main_exports = {};
__export(main_exports, {
  default: () => Tasks4Today
});
module.exports = __toCommonJS(main_exports);
var import_obsidian = require("obsidian");
var Tasks4Today = class extends import_obsidian.Plugin {
  constructor(app, manifest) {
    super(app, manifest);
  }
  async onload() {
    console.log("Loading Tasks4Today plugin");
    this.app.workspace.onLayoutReady(() => {
      if (this.isDailyNotesEnabled()) {
        console.log("Daily notes functionality is available");
      } else {
        console.log("Daily notes functionality is not available");
      }
    });
    this.addCommand({
      id: "transfer-old-tasks",
      name: "Transfer Old Tasks",
      callback: () => this.transferOldTasks()
    });
  }
  isDailyNotesEnabled() {
    return "getDailyNote" in this.app.workspace;
  }
  async transferOldTasks() {
    console.log("Transferring old tasks");
  }
  onunload() {
    console.log("Unloading Tasks4Today plugin");
  }
};
